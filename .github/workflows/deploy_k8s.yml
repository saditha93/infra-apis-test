name: deploy-k8s

on:
  workflow_dispatch:
    inputs:
      client:
        description: "Client key (matches a file in clients/, e.g. neo-retail)"
        required: true
      image_tag:
        description: "Image tag to deploy (e.g., latest or a commit SHA)"
        required: false
        default: "latest"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Apply image tag to client values
        run: |
          echo "IMAGE_TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV
          sed -i "s#:latest#:${{ env.IMAGE_TAG }}#g" clients/${{ github.event.inputs.client }}.yaml

      - name: Setup SSH key
        run: |
          # Write multi-line key to file
          echo "${{ secrets.SERVER_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        shell: bash

      - name: Copy chart & client values to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key_path: ~/.ssh/id_rsa
          source: "chart/*,clients/${{ github.event.inputs.client }}.yaml"
          target: "~/infra-apis/"
          overwrite: true
          debug: true

      - name: Run Helm upgrade/install on server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key_path: ~/.ssh/id_rsa
          debug: true
          script: |
            set -e

            # Ensure tools exist
            if ! command -v helm >/dev/null; then
              curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
            fi
            if ! command -v kubectl >/dev/null; then
              curl -LO https://dl.k8s.io/release/v1.30.0/bin/linux/amd64/kubectl
              chmod +x kubectl && sudo mv kubectl /usr/local/bin/
            fi

            # Confirm cluster is reachable
            kubectl cluster-info

            cd ~/infra-apis

            # Create namespace if needed
            kubectl get ns ${{ secrets.K8S_NAMESPACE }} >/dev/null 2>&1 || \
              kubectl create ns ${{ secrets.K8S_NAMESPACE }}

            # Deploy/upgrade the client release
            helm upgrade --install ${{ github.event.inputs.client }} ./chart \
              --namespace ${{ secrets.K8S_NAMESPACE }} \
              -f clients/${{ github.event.inputs.client }}.yaml

            # Optional: show rollout status for both deploys
            kubectl -n ${{ secrets.K8S_NAMESPACE }} rollout status deploy/api1 --timeout=120s || true
            kubectl -n ${{ secrets.K8S_NAMESPACE }} rollout status deploy/api2 --timeout=120s || true